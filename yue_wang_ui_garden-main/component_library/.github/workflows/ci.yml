name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps --ignore-scripts
      
    - name: Run ESLint
      run: npm run lint
      continue-on-error: true
      
    - name: Run Prettier check
      run: npm run format:check
      continue-on-error: true
      
    - name: Run tests
      run: npm test
      continue-on-error: true
      
    - name: Build application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files-${{ matrix.node-version }}
        path: dist/

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build Docker image
      run: docker build -t wang_yue_coding_assignment14 .
      
    - name: Test Docker image
      run: |
        docker run -d -p 5575:5575 --name test-container wang_yue_coding_assignment14
        sleep 10
        curl -f http://localhost:5575 || exit 1
        docker stop test-container
        docker rm test-container

  deploy:
    runs-on: ubuntu-latest
    needs: [test, docker]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to production
      run: |
        echo "Deployment step - would deploy to production server"
        echo "Container: wang_yue_coding_assignment14"
        echo "Port: 5575"
        echo "Working Directory: /wang_yue_final_site"
      run: npm run lint || echo "ESLint completed with warnings"
      
    - name: Check Prettier formatting
      run: npm run format:check
      
    - name: Run tests
      run: npm test
      
    - name: Build Storybook
      run: npm run build-storybook
      
    - name: Upload build artifacts
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: storybook-build
        path: storybook-static/

  docker-build:
    needs: code-quality
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        docker build -t wang_yue_ui_garden_build_checks .
        
    - name: Test Docker container
      run: |
        docker run -d -p 8018:80 --name wang_yue_coding_assignment13 wang_yue_ui_garden_build_checks
        sleep 10
        curl -f http://localhost:8018 || exit 1
        docker stop wang_yue_coding_assignment13
